#! /usr/bin/env ruby

require 'orogen'
require 'optparse'

parser = OptionParser.new do |opt|
    opt.banner = "Usage: orogen [options] <template file>"

    opt.on("--[no-]corba", "enables/disables corba support [disabled]") do |flag|
        if flag then Orocos::Generation.enable_corba
        else Orocos::Generation.disable_corba
        end
    end
    opt.on("--target=TARGET", "set the orocos build target (gnulinux or xenomai)") do |target|
        target = target.to_s
        if target !~ /^(gnulinux|xenomai)$/
            STDERR.puts "unknown target '#{target}', possible values are gnulinux and xenomai"
            exit 1
        end

        Orocos::Generation.orocos_target = target.to_s
    end

    opt.on("-v", "--verbose") { Orocos::Generation.logger.level = Logger::INFO }
    opt.on("-d", "--debug")   { Orocos::Generation.logger.level = Logger::DEBUG }
    opt.on("-h", "--help", "this help message") do
        puts opt
        exit 0
    end
    opt.separator ""
    opt.on("--really-clean", "removes all autogenerated files, and user-side part that are identical to the templates") do
        Orocos::Generation.really_clean
        exit 0
    end
    opt.on("--clean", "removes all autogenerated files") do
        Orocos::Generation.clean
        exit 0
    end
    opt.on("--base-dir", "the directory where orogen lib part is installed") do
        puts Orocos::Generation.base_dir
        exit 0
    end

    opt.on("-V", "--version", "displays the current orogen version") do
        puts "orogen v#{Orocos::Generation::VERSION}"
        puts "Copyright 2008 DFKI"
        STDOUT.flush
    end
end
files = parser.parse! ARGV
if files.size != 1
    puts parser
    exit 1
end

begin
    filename  = files.first
    component = Orocos::Generation::Component.load(filename)
    component.generate
rescue Orocos::Generation::ConfigError => e
    STDERR.puts "ERROR: #{e.message}"
    exit 1
end

